; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html
[platformio]
default_envs = native

[env]
extra_scripts =
    scripts/run_lvgl_kconfig.py
    scripts/run_tft_espi_drivers_kconfig.py
    scripts/run_lvgl_native_drivers_kconfig.py

[env:esp32]
platform = espressif32
board = upesy_wroom
framework = espidf, arduino
lib_ldf_mode= chain+
build_unflags=
    -Wswitch-enum
build_flags =
    -I include/esp32
    -DLV_LVGL_H_INCLUDE_SIMPLE
    -DLV_CONF_INCLUDE_SIMPLE
    -DLV_CONF_PATH=lv_conf.h
monitor_filters = esp32_exception_decoder
monitor_speed = 115200
monitor_port = /dev/cu.usbserial-0001
upload_speed = 115200
upload_port = /dev/cu.usbserial-0001

custom_lvgl_kconfig_save_settings = include/esp32/lv_conf.config
custom_lvgl_kconfig_output_header = include/esp32/lv_conf.h
custom_lvgl_kconfig_include_headers =
    TFT_eSPI_drivers.h
custom_tft_espi_drivers_kconfig_save_settings = include/esp32/TFT_eSPI_drivers.config
custom_tft_espi_drivers_kconfig_output_header = include/esp32/TFT_eSPI_drivers.h

[env:native]
platform = native

extra_scripts =
    scripts/sdl2_build_extra.py
lib_deps =
    ArduinoFake
build_flags =
    -std=c++11
    -I include/native
    -lSDL2
    -D LV_LVGL_H_INCLUDE_SIMPLE
    -D LV_CONF_INCLUDE_SIMPLE
    -D LV_CONF_PATH=lv_conf.h
    -I/usr/local/Cellar/sdl2/2.30.0/include
    -L/usr/local/Cellar/sdl2/2.30.0/lib
    ; --verbose

custom_lvgl_kconfig_save_settings = include/native/lv_conf.config
custom_lvgl_kconfig_output_header = include/native/lv_conf.h
custom_lvgl_kconfig_include_headers =
    lvgl_native_drivers.h
custom_lvgl_native_drivers_kconfig_save_settings = include/native/lvgl_native_drivers.config
custom_lvgl_native_drivers_kconfig_output_header = include/native/lvgl_native_drivers.h

; build_type = debug
; debug_tool = lldb
